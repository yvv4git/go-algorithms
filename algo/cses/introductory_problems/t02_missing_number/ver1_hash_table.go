package main

func findMissingNumberV1(numbers []int, N int) int {
	/*
		METHOD: Hash table
		TIME COMPLEXITY: O(n), где n - количество элементов в последовательности numbers.
		Это обусловлено тем, что мы проходим по всем элементам последовательности для заполнения хэш-таблицы,
		и затем проходим по всем возможным числам от 1 до N, чтобы найти отсутствующее число.
		SPACE COMPLEXITY: O(n), так как мы используем дополнительную память для хранения хэш-таблицы, в которой хранятся все числа из последовательности numbers.
	*/
	// Создаем хэш-таблицу для отслеживания наличия чисел
	numberMap := make(map[int]bool)

	// Заполняем хэш-таблицу для всех чисел в последовательности
	for _, number := range numbers {
		numberMap[number] = true
	}

	// Проходим по всем возможным числам от 1 до N
	for i := 1; i <= N; i++ {
		// Если число отсутствует в хэш-таблице, возвращаем его
		if _, exists := numberMap[i]; !exists {
			return i
		}
	}

	// Если отсутствующего числа нет, возвращаем -1
	return -1
}
