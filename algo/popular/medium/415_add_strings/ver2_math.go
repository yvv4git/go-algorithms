package main

// Функция addStringsV2 складывает два числа, представленных в виде строк.
func addStringsV2(num1 string, num2 string) string {
	// Если длина первого числа меньше длины второго, меняем их местами.
	if len(num1) < len(num2) {
		num1, num2 = num2, num1
	}
	// Вычисляем смещение между длинами двух чисел.
	var offset int = len(num1) - len(num2)
	// Константа 'zero' для преобразования символов в числа.
	const zero byte = '0' // 48
	// Создаем слайс байтов для хранения результата сложения, размер которого на единицу больше длины большего числа.
	result := make([]byte, len(num1)+1)

	// Проходим по каждому символу в обоих числах справа налево.
	for i := len(num1) - 1; i >= 0; i-- {
		// Преобразуем символы в числа и вычитаем 'zero' для получения десятичных значений.
		var d1 byte = num1[i] - zero
		var d2 byte = 0
		// Если индекс второго числа не выходит за границы, то преобразуем символ второго числа в число.
		if i-offset >= 0 {
			d2 = num2[i-offset] - zero
		}
		// Складываем текущие разряды чисел и перенос из предыдущего разряда.
		result[i+1] += d1 + d2
		// Вычисляем перенос в следующий разряд.
		result[i] = result[i+1] / 10
		// Вычисляем текущий разряд без учета переноса.
		result[i+1] %= 10
		// Прибавляем 'zero' для получения символа для текущего разряда.
		result[i+1] += zero
	}
	// Если первый разряд в результате равен нулю, то удаляем его.
	if result[0] == 0 {
		result = result[1:]
	} else {
		// Иначе прибавляем 'zero' к первому разряду.
		result[0] += zero
	}

	// Возвращаем результат в виде строки.
	return string(result)
}
