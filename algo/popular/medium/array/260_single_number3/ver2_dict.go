package main

// Функция singleNumberV2 находит два числа, которые встречаются только один раз в массиве.
func singleNumberV2(nums []int) []int {
	// Создаем пустой срез res с начальной емкостью 3.
	res := make([]int, 0, 3)

	// Метка для внешнего цикла.
LOOP:
	// Проходим по всем элементам массива nums.
	for _, v := range nums {
		// Проходим по всем элементам среза res.
		for i, v1 := range res {
			// Если текущий элемент v из nums совпадает с элементом v1 из res,
			// то меняем местами элементы и удаляем последний элемент из res.
			if v == v1 {
				res[i], res[len(res)-1] = res[len(res)-1], res[i]
				res = res[:len(res)-1]
				// Переходим к следующей итерации внешнего цикла.
				continue LOOP
			}
		}
		// Если внутренний цикл не находит совпадений, то добавляем текущий элемент v в res.
		res = append(res, v)
	}

	// Возвращаем первые два элемента из res, так как задача требует найти только два числа, которые встречаются один раз.
	return res[:2]
}
