package main

func majorityElement(nums []int) []int {
	/*
		METHOD: Boyer-Moore Voting Algorithm
		Алгоритм "Boyer-Moore Voting Algorithm" - это простой алгоритм, используемый для нахождения элемента,
		который встречается более n/2 раз в массиве, где n - размер массива.
		Однако, этот алгоритм можно модифицировать для нахождения элементов, которые встречаются более n/3 раз.

		Алгоритм основан на принципе большинства голосов, который говорит о том,
		что если мы отменяем голоса между двумя кандидатами, то оставшийся кандидат будет победителем.

		В контексте этой задачи, мы будем использовать два кандидата, которых может быть больше двух,
		и два счетчика для отслеживания голосов за этих кандидатов.
		1. На первом проходе мы выбираем два кандидата, которых может быть больше двух, и считаем голоса за них.
		Если текущий элемент не соответствует ни одному из кандидатов, то мы отнимаем единицу от счетчиков обоих кандидатов.
		2. На втором проходе мы проверяем, какие из выбранных кандидатов являются "majority elements" - теми,
		которые встречаются более n/3 раз.

		Таким образом, алгоритм "Boyer-Moore Voting Algorithm" модифицирован для нахождения всех элементов,
		которые встречаются более n/3 раз в массиве.

		TIME COMPLEXITY: O(n), где n - количество элементов в массиве, потому что мы проходим по массиву дважды.

		SPACE COMPLEXITY: O(1), потому что мы используем фиксированное количество переменных, не зависящих от размера входного массива.
	*/
	if len(nums) == 0 {
		return []int{}
	}

	// Инициализируем переменные для двух кандидатов и их счетчиков
	candidate1, candidate2, count1, count2 := nums[0], nums[0], 0, 0

	// Первый проход для выбора кандидатов
	for _, num := range nums {
		if num == candidate1 {
			count1++
		} else if num == candidate2 {
			count2++
		} else if count1 == 0 {
			candidate1 = num
			count1 = 1
		} else if count2 == 0 {
			candidate2 = num
			count2 = 1
		} else {
			count1--
			count2--
		}
	}

	// Второй проход для подсчета количества каждого кандидата
	count1, count2 = 0, 0
	for _, num := range nums {
		if num == candidate1 {
			count1++
		} else if num == candidate2 {
			count2++
		}
	}

	// Проверяем, являются ли кандидаты "majority elements"
	result := []int{}
	if count1 > len(nums)/3 {
		result = append(result, candidate1)
	}
	if count2 > len(nums)/3 {
		result = append(result, candidate2)
	}

	return result
}
