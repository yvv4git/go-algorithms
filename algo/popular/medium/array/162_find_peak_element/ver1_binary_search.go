package _62_find_peak_element

// Функция для поиска пикал в массиве
func findPeakElementV1(nums []int) int {
	/*
		METHOD: Binary search
		TIME COMPLEXITY: O(logN), так как мы каждый раз делим половину массива, где N - размер входного массива.
		Space complexity: O(1), так как мы используем только несколько переменных, которые не зависят от размера входных данных.
	*/

	// Инициализируем две переменные left и right, которые будут использоваться для бинарного поиска.
	// Left - это начало массива, а right - это конец массива.
	left, right := 0, len(nums)-1

	// Запускаем цикл, который будет продолжаться, пока left < right.
	// Это означает, что мы будем продолжать делить массив пополам, пока не найдем пик.
	for left < right {
		// Вычисляем средний индекс.
		mid := left + (right-left)/2

		// Если средний элемент больше следующего элемента, то это означает, что мы находимся в левой половине пика.
		// Поэтому мы обновляем right, чтобы искать пик в левой половине.
		if nums[mid] > nums[mid+1] {
			right = mid
		} else {
			// Если средний элемент меньше следующего элемента, то это означает, что мы находимся в правой половине пика.
			// Поэтому мы обновляем left, чтобы искать пик в правой половине.
			left = mid + 1
		}
	}

	// Когда мы вышли из цикла, left и right указывают на один и тот же элемент, который является пиком.
	// Поэтому мы возвращаем left.
	return left
}
