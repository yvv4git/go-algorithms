package main

func kSmallestPairsV2(nums1 []int, nums2 []int, k int) [][]int {
	// Проверка на пустые массивы
	if len(nums1) == 0 || len(nums2) == 0 {
		return [][]int{}
	}

	// Инициализация результирующего среза
	result := make([][]int, 0)

	// Указатели для nums1 и nums2
	p1, p2 := 0, len(nums2)-1

	// Пока не достигли конца одного из массивов и не нашли k пар
	for k > 0 && p1 < len(nums1) && p2 >= 0 {
		// Добавляем текущую пару в результат
		result = append(result, []int{nums1[p1], nums2[p2]})

		// Если есть возможность перейти на следующий элемент в nums1
		if p1+1 < len(nums1) {
			// Если сумма текущего элемента nums1 и предыдущего элемента nums2 меньше, чем сумма следующего элемента nums1 и текущего элемента nums2
			if nums1[p1]+nums2[p2] > nums1[p1+1]+nums2[p2] {
				p1++ // Переходим на следующий элемент в nums1
			} else {
				p2-- // Иначе переходим на предыдущий элемент в nums2
			}
		} else {
			p2-- // Если нет возможности перейти на следующий элемент в nums1, переходим на предыдущий элемент в nums2
		}

		k-- // Уменьшаем счетчик пар
	}

	return result
}
