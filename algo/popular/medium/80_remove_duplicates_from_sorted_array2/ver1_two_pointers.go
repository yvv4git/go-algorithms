package main

import "fmt"

func removeDuplicates(nums []int) int {
	/*
		METHOD: Two pointers

		TIME COMPLEXITY: O(n), где n - количество элементов в массиве, так как мы проходим по массиву всего один раз.

		SPACE COMPLEXITY: O(1), так как мы используем только несколько дополнительных переменных для указателей,
		не зависящих от размера входных данных.
	*/
	// Если длина массива меньше или равна 2, то дубликатов не может быть
	if len(nums) <= 2 {
		return len(nums)
	}

	// Инициализируем два указателя: i и j
	i := 2 // i указывает на позицию, куда можно поместить следующий уникальный элемент
	for j := 2; j < len(nums); j++ {
		// Если текущий элемент не равен предыдущему элементу, который мы уже поместили в массив (два элемента назад)
		if nums[j] != nums[i-2] {
			// Помещаем текущий элемент в позицию i и увеличиваем оба указателя
			nums[i] = nums[j]
			i++
		}
	}

	// Возвращаем новую длину массива
	return i
}

func main() {
	nums := []int{1, 1, 1, 2, 2, 3}
	newLength := removeDuplicates(nums)
	fmt.Println("Новая длина массива:", newLength)
	fmt.Println("Массив после удаления дубликатов:", nums[:newLength])
}
