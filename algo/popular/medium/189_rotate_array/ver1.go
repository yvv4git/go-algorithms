package main

import "fmt"

func rotate(nums []int, k int) {
	/*
		METHOD: Array reverse
		Два шага:
		1. Реверс всего массива: Сначала мы реверсируем весь массив.
		Это позволяет нам поменять порядок элементов на обратный.

		2. Реверс части массива: Затем мы реверсируем первую часть массива до k элементов и вторую часть массива после k элементов.
		Это позволяет нам сдвинуть элементы массива на k позиций вправо.

		TIME COMPLEXITY: O(n), где n - количество элементов в массиве, так как мы проходим по каждому элементу массива ровно один раз.

		SPACE COMPLEXITY: O(1), так как мы не используем дополнительную память, кроме тех, которая используется для хранения входных данных.
	*/
	k %= len(nums) // Вычисляем остаток от деления k на длину массива

	// Функция для переворота массива в диапазоне [start, end]
	reverse := func(start, end int) {
		for start < end {
			nums[start], nums[end] = nums[end], nums[start]
			start++
			end--
		}
	}

	// Переворачиваем весь массив
	reverse(0, len(nums)-1)
	// Переворачиваем первые k элементов
	reverse(0, k-1)
	// Переворачиваем оставшиеся элементы после k
	reverse(k, len(nums)-1)
}

func main() {
	nums := []int{1, 2, 3, 4, 5, 6, 7}
	k := 3
	rotate(nums, k)
	fmt.Println(nums) // Выводит: [5 6 7 1 2 3 4]
}
