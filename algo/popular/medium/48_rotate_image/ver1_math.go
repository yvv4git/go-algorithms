package main

import "fmt"

// Функция для разворота изображения на 90 градусов
func rotate(matrix [][]int) {
	/*
		METHOD: Math
		В этом коде мы сначала транспонируем матрицу, затем разворачиваем каждую строку.
		После этого матрица будет содержать изображение, повернутое на 90 градусов по часовой стрелке.

		TIME COMPLEXITY: O(n^2), где n - количество строк (и столбцов) в матрице,
		так как мы проходим по каждому элементу матрицы дважды: один раз для транспонирования и один раз для разворота строк.

		SPACE COMPLEXITY: O(1), так как мы не используем дополнительное пространство, кроме для хранения входных данных.
	*/
	n := len(matrix)

	// Транспонирование матрицы
	for i := 0; i < n; i++ {
		for j := i; j < n; j++ {
			matrix[j][i], matrix[i][j] = matrix[i][j], matrix[j][i]
		}
	}

	// Разворот каждой строки
	for i := 0; i < n; i++ {
		for j := 0; j < n/2; j++ {
			matrix[i][j], matrix[i][n-j-1] = matrix[i][n-j-1], matrix[i][j]
		}
	}
}

func main() {
	matrix := [][]int{
		{1, 2, 3},
		{4, 5, 6},
		{7, 8, 9},
	}

	rotate(matrix)

	// Вывод результата
	for _, row := range matrix {
		fmt.Println(row)
	}
}
