package main

// Функция setZeroesV3 принимает двумерный массив целых чисел и изменяет его таким образом,
// что если элемент равен 0, то вся строка и вся колонка, в которой находится этот элемент, становятся нулями.
func setZeroesV3(matrix [][]int) {
	/*
		METHOD: Iteration & Markers

		TIME COMPLEXITY: O(m*n), где m и n - количество строк и столбцов в матрице соответственно.
		Это связано с двумя вложенными циклами, которые проходятся по всем элементам матрицы.

		SPACE COMPLEXITY: O(1), так как используется только небольшая константа дополнительной памяти.
	*/
	isCol := false
	R := len(matrix)
	C := len(matrix[0])

	// Пройтись по всем элементам матрицы, кроме первого элемента в каждой строке и столбце.
	// Если элемент равен 0, установить соответствующий элемент в первой строке и первом столбце в 0.
	for i := 0; i < R; i++ {
		if matrix[i][0] == 0 {
			isCol = true
		}
		for j := 1; j < C; j++ {
			if matrix[i][j] == 0 {
				matrix[0][j] = 0
				matrix[i][0] = 0
			}
		}
	}

	// Пройтись по оставшимся элементам матрицы и используя первый столбец и строку, обновить элементы.
	for i := 1; i < R; i++ {
		for j := 1; j < C; j++ {
			if matrix[i][0] == 0 || matrix[0][j] == 0 {
				matrix[i][j] = 0
			}
		}
	}

	// Если первый элемент в первой строке нулевой, установить все элементы в этой строке в 0.
	if matrix[0][0] == 0 {
		for j := 0; j < C; j++ {
			matrix[0][j] = 0
		}
	}

	// Если в первом столбце есть нулевые элементы, установить все элементы в этом столбце в 0.
	if isCol {
		for i := 0; i < R; i++ {
			matrix[i][0] = 0
		}
	}
}
