package main

import "fmt"

func subtractProductAndSum(n int) int {
	/*
	   METHOD: Iterative Approach
	   В этом коде мы используем итеративный подход для вычисления произведения и суммы цифр числа n.

	   В цикле мы извлекаем каждую цифру числа, обновляем произведение и сумму цифр.
	   После завершения цикла вычисляем разницу между произведением и суммой цифр.

	   TIME COMPLEXITY: O(d), где d — количество цифр в числе n.

	   SPACE COMPLEXITY: O(1)
	*/
	// Инициализируем переменные для произведения и суммы цифр
	product := 1
	sum := 0

	// Пока число n больше 0, извлекаем цифры
	for n > 0 {
		// Извлекаем последнюю цифру числа
		digit := n % 10
		// Обновляем произведение и сумму цифр
		product *= digit
		sum += digit
		// Удаляем последнюю цифру числа
		n /= 10
	}

	// Вычисляем разницу между произведением и суммой цифр
	return product - sum
}

func main() {
	// Примеры использования функции
	n1 := 234
	fmt.Println(subtractProductAndSum(n1)) // Вывод: 15

	n2 := 4421
	fmt.Println(subtractProductAndSum(n2)) // Вывод: 21
}
