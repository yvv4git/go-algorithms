package main

import (
	"fmt"
	"sort"
)

// Функция для решения задачи с помощью сортировки
func canBeEqualByReversing(target, arr []int) bool {
	/*
		METHOD: SORTING
		Пусть есть два массива: target и arr.
		Мы хотим проверить, можно ли переворачивать подмассивы target и arr,
		чтобы они стали равными.

		Переворачивать подмассивы мы можем, если сортировать их.
		Тогда, если массивы сортированы, то они будут равны, если их элементы
		соответствуют друг другу.

		Поэтому, мы сначала сортируем оба массива, а затем сравниваем их.

		TIME COMPLEXITY: O(nlogn) - сортировка двух массивов
		SPACE COMPLEXITY: O(1) - не требуется дополнительной памяти
	*/
	// Сортируем оба массива
	sort.Ints(target)
	sort.Ints(arr)

	// Сравниваем отсортированные массивы
	for i := 0; i < len(target); i++ {
		if target[i] != arr[i] {
			return false
		}
	}

	return true
}

func main() {
	// Пример данных
	target := []int{1, 2, 3, 4}
	arr := []int{2, 4, 3, 1}

	// Вызов функции для проверки
	if canBeEqualByReversing(target, arr) {
		fmt.Println("Массивы могут быть равными после переворота подмассивов")
	} else {
		fmt.Println("Массивы не могут быть равными после переворота подмассивов")
	}
}
