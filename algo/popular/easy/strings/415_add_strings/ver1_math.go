package main

import (
	"fmt"
	"strconv"
)

func addStrings(num1 string, num2 string) string {
	/*
		METHOD: Math
		TIME COMPLEXITY: O(n), где n - максимальная длина между двумя числами.
		Это обусловлено тем, что мы проходим по каждому символу в обоих числах ровно один раз.
		Space complexity: O(n), где n - максимальная длина между двумя числами.
		Это обусловлено тем, что в худшем случае мы можем потребовать дополнительное место для хранения результата,
		который будет иметь длину на один символ больше, чем самое длинное из входных чисел.
	*/
	// Инициализируем указатели для каждой строки с конца
	i, j := len(num1)-1, len(num2)-1
	// Переменная для хранения переноса
	carry := 0
	// Строка для результата
	result := ""

	// Пока мы не достигли начала каждой строки
	for i >= 0 || j >= 0 {
		// Извлекаем цифры из строк и преобразуем их в целое число
		x, y := 0, 0
		if i >= 0 {
			x = int(num1[i] - '0')
		}
		if j >= 0 {
			y = int(num2[j] - '0')
		}

		// Вычисляем сумму цифр из обеих строк и переноса
		sum := x + y + carry
		// Добавляем последнюю цифру суммы в начало результата
		result = strconv.Itoa(sum%10) + result
		// Обновляем перенос для следующей итерации
		carry = sum / 10

		// Перемещаем указатели на предыдущие символы
		i--
		j--
	}

	// Если после завершения цикла перенос не равен 0, добавляем его в начало результата
	if carry != 0 {
		result = strconv.Itoa(carry) + result
	}

	return result
}

func main() {
	num1 := "123"
	num2 := "456"
	fmt.Println(addStrings(num1, num2)) // Вывод: "579"
}
