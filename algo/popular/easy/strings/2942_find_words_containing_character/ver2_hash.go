package main

func findWordsContainingV2(words []string, x byte) []int {
	/*
		METHOD: Hash table
		TIME COMPLEXITY: O(n), где n - количество слов в массиве. Это происходит, потому что мы проходим по каждому слову и добавляем его индекс в хеш-таблицу.
		SPACE COMPLEXITY: O(n), где n - количество слов в массиве. Это происходит, потому что в худшем случае (когда все слова содержат искомый символ) мы должны хранить индекс каждого слова в хеш-таблице.
	*/
	// Создаем словарь для хранения индексов слов, содержащих символ x
	indicesMap := make(map[byte][]int)

	// Проходим по всем словам в массиве words
	for i, word := range words {
		// Проходим по всем символам в слове
		for j := 0; j < len(word); j++ {
			// Если символ равен x, добавляем индекс слова в словарь
			if word[j] == x {
				indicesMap[x] = append(indicesMap[x], i)
				break // Прекращаем проверку текущего слова, так как нам нужны уникальные индексы
			}
		}
	}

	// Возвращаем список индексов слов, содержащих символ x
	return indicesMap[x]
}
