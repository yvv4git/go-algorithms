package main

import (
	"fmt"
)

// Функция для проверки, лежат ли все точки на одной прямой
func checkStraightLine(coordinates [][]int) bool {
	/*
		METHOD: Linear Search
		1. Проверяем, что количество точек больше или равно 2.
		2. Вычисляем угловой коэффициент (slope) между первыми двумя точками.
		3. Проверяем, что угловой коэффициент между первой точкой и каждой из остальных точек совпадает.
		4. Если все угловые коэффициенты совпадают, то точки лежат на одной прямой.
		5. Обрабатываем особый случай, когда линия вертикальная (x2 - x1 == 0).

		TIME COMPLEXITY: O(n)
		- Мы проходим по массиву точек один раз (цикл for).
		- Каждая операция внутри цикла выполняется за O(1).
		- Общая сложность: O(n), где n — количество точек.

		SPACE COMPLEXITY: O(1)
		- Мы используем только константное количество дополнительной памяти (переменные x1, y1, x2, y2, slope и т.д.).
		- Не зависит от размера входных данных.
	*/
	// Если точек меньше двух, то они автоматически лежат на одной прямой
	if len(coordinates) <= 2 {
		return true
	}

	// Берем первые две точки для вычисления углового коэффициента
	x1, y1 := coordinates[0][0], coordinates[0][1]
	x2, y2 := coordinates[1][0], coordinates[1][1]

	// Угловой коэффициент между первыми двумя точками
	// Если x2 - x1 == 0, то это вертикальная линия, и угловой коэффициент бесконечен
	if x2-x1 == 0 {
		// Проверяем, что все остальные точки также лежат на вертикальной линии
		for _, point := range coordinates {
			if point[0] != x1 {
				return false
			}
		}
		return true
	}

	// Вычисляем угловой коэффициент (slope)
	slope := float64(y2-y1) / float64(x2-x1)

	// Проверяем угловой коэффициент для всех остальных точек
	for i := 2; i < len(coordinates); i++ {
		xi, yi := coordinates[i][0], coordinates[i][1]
		// Если xi - x1 == 0, то это вертикальная линия, и угловой коэффициент должен быть бесконечным
		if xi-x1 == 0 {
			return false
		}
		// Вычисляем угловой коэффициент между текущей точкой и первой точкой
		currentSlope := float64(yi-y1) / float64(xi-x1)
		// Если угловой коэффициент отличается, то точки не лежат на одной прямой
		if currentSlope != slope {
			return false
		}
	}

	// Если все угловые коэффициенты совпадают, то точки лежат на одной прямой
	return true
}

func main() {
	// Пример 1: Точки лежат на одной прямой
	coordinates1 := [][]int{{1, 2}, {2, 3}, {3, 4}, {4, 5}}
	result1 := checkStraightLine(coordinates1)
	fmt.Println("Пример 1:", result1) // Вывод: true

	// Пример 2: Точки НЕ лежат на одной прямой
	coordinates2 := [][]int{{1, 1}, {2, 2}, {3, 4}, {4, 5}}
	result2 := checkStraightLine(coordinates2)
	fmt.Println("Пример 2:", result2) // Вывод: false

	// Пример 3: Вертикальная линия
	coordinates3 := [][]int{{2, 3}, {2, 4}, {2, 5}, {2, 6}}
	result3 := checkStraightLine(coordinates3)
	fmt.Println("Пример 3:", result3) // Вывод: true

	// Пример 4: Всего две точки
	coordinates4 := [][]int{{1, 1}, {2, 2}}
	result4 := checkStraightLine(coordinates4)
	fmt.Println("Пример 4:", result4) // Вывод: true
}
