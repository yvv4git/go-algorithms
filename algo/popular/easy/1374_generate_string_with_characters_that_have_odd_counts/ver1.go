package main

import (
	"strings"
)

func generateTheString(n int) string {
	/*
		APPROACH: Direct Construction
		Для решения задачи мы используем следующий подход:
		1. Если n нечетное, то возвращаем строку, состоящую из n повторений символа 'a'.
		2. Если n четное, то возвращаем строку, состоящую из (n-1) повторений символа 'a' и одного символа 'b'.
		3. Этот подход гарантирует, что каждый символ в строке будет встречаться нечетное количество раз.

		TIME COMPLEXITY: O(1)
		Временная сложность алгоритма составляет O(1), так как мы просто создаем строку фиксированной длины
		с использованием функции strings.Repeat, которая работает за O(n), но в данном случае n фиксировано.

		SPACE COMPLEXITY: O(1)
		Пространственная сложность алгоритма составляет O(1), так как мы используем фиксированное количество дополнительной памяти
		(переменные для хранения строки и результат функции strings.Repeat).
	*/
	// Если n нечетное, возвращаем строку из 'a' повторенных n раз
	if n%2 != 0 {
		return strings.Repeat("a", n)
	}
	// Если n четное, возвращаем строку из 'a' повторенных (n-1) раз и один 'b'
	return strings.Repeat("a", n-1) + "b"
}

func main() {
	// Пример использования
	println(generateTheString(4)) // Вывод: "aaab"
	println(generateTheString(5)) // Вывод: "aaaaa"
	println(generateTheString(6)) // Вывод: "aaaaab"
}
