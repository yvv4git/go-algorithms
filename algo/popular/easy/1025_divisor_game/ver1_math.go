package main

import "fmt"

// Функция divisorGame принимает целое число N и возвращает true, если Алиса выиграет, и false, если проиграет.
func divisorGame(N int) bool {
	/*
		TASK: Определить, выиграет ли Алиса, если оба игрока играют оптимально.
		Два игрока, Алиса и Боб, играют в игру. У них есть число N. Правила игры следующие:
		1. Игроки ходят по очереди.
		2. На своём ходу игрок должен выбрать любой делитель x числа N (кроме самого N), такой что 0 < x < N.
		3. После выбора делителя x, число N уменьшается до N - x.
		4. Проигрывает тот, кто не может сделать ход (т.е. когда N становится равным 1).


		METHOD: Math
		Это основано на логике, что если N четное, Алиса всегда может выиграть, выбирая x = 1 на каждом своем ходу,
		что приведет к тому, что Боб будет получать нечетные числа. В конце концов, Боб получит N = 1 и проиграет.
		Боб проиграет, если получит число 1, потому что в правилах игры указано, что проигрывает тот, кто не может сделать ход.
		Когда N становится равным 1, не существует такого делителя x, что 0 < x < 1, который можно было бы выбрать.
		Поэтому игрок, получивший N = 1, не может сделать ход и, следовательно, проигрывает.

		Делитель числа N - это такое число x, на которое N делится без остатка.
		Например, для числа 6 делителями являются 1, 2, и 3, так как 6 делится на эти числа без остатка.

		Пример:
		Начальное значение N = 4.
		1. Ход Алисы:
		Алиса выбирает делитель x = 1.
		Новое значение N становится 4 - 1 = 3.

		2. Ход Боба:
		Боб получает N = 3.
		Боб выбирает делитель x = 1.
		Новое значение N становится 3 - 1 = 2.

		3. Ход Алисы:
		Алиса получает N = 2.
		Алиса выбирает делитель x = 1.
		Новое значение N становится 2 - 1 = 1.

		4. Ход Боба:
		Боб получает N = 1.
		Боб не может сделать ход, так как нет делителя x, удовлетворяющего условию 0 < x < 1.
		Боб проигрывает.

		TIME COMPLEXITY: O(1)
		SPACE COMPLEXITY: O(1)

	*/
	// Если N четное, Алиса выиграет, иначе проиграет.
	return N%2 == 0
}

func main() {
	// Примеры использования функции
	fmt.Println(divisorGame(2)) // Ожидаемый вывод: true
	fmt.Println(divisorGame(3)) // Ожидаемый вывод: false
}
