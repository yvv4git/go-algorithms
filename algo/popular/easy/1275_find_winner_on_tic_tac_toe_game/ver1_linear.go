package main

import "fmt"

func tictactoe(moves [][]int) string {
	/*
		METHOD: Linear Scan (линейное сканирование)
		- Используется подход, основанный на последовательной проверке всех возможных выигрышных комбинаций.
		- Игровое поле представляется в виде двумерного массива 3x3.
		- На каждом шаге проверяются возможные выигрышные комбинации:
		  * Горизонтальные линии (строки).
		  * Вертикальные линии (столбцы).
		  * Диагонали.
		- Если выигрышная комбинация найдена, возвращается соответствующий победитель.
		- Если все клетки заполнены, но победителя нет, возвращается "Draw".
		- Если остались пустые клетки и победителя нет, возвращается "Pending".

		TIME COMPLEXITY: O(1)
		- Поскольку поле фиксированного размера 3x3, все операции выполняются за константное время.
		- Проверка выигрышных комбинаций также выполняется за O(1), так как количество комбинаций фиксировано.

		SPACE COMPLEXITY: O(1)
		- Используется фиксированное количество памяти для хранения поля 3x3.
		- Дополнительная память не зависит от входных данных.
	*/
	// Создаём поле 3x3
	board := [3][3]string{}

	// Заполняем поле ходами
	for i, move := range moves {
		row, col := move[0], move[1]
		if i%2 == 0 {
			board[row][col] = "X" // Ход игрока A ("X")
		} else {
			board[row][col] = "O" // Ход игрока B ("O")
		}
	}

	// Проверяем выигрышные комбинации
	for i := 0; i < 3; i++ {
		// Проверка строк
		if board[i][0] != "" && board[i][0] == board[i][1] && board[i][1] == board[i][2] {
			if board[i][0] == "X" {
				return "A" // Игрок A выиграл
			} else {
				return "B" // Игрок B выиграл
			}
		}
		// Проверка столбцов
		if board[0][i] != "" && board[0][i] == board[1][i] && board[1][i] == board[2][i] {
			if board[0][i] == "X" {
				return "A" // Игрок A выиграл
			} else {
				return "B" // Игрок B выиграл
			}
		}
	}

	// Проверка диагоналей
	if board[0][0] != "" && board[0][0] == board[1][1] && board[1][1] == board[2][2] {
		if board[0][0] == "X" {
			return "A" // Игрок A выиграл
		} else {
			return "B" // Игрок B выиграл
		}
	}
	if board[0][2] != "" && board[0][2] == board[1][1] && board[1][1] == board[2][0] {
		if board[0][2] == "X" {
			return "A" // Игрок A выиграл
		} else {
			return "B" // Игрок B выиграл
		}
	}

	// Проверка на ничью или продолжение игры
	if len(moves) == 9 {
		return "Draw" // Ничья
	} else {
		return "Pending" // Игра продолжается
	}
}

func main() {
	// Пример входных данных
	moves := [][]int{{0, 0}, {2, 0}, {1, 1}, {2, 1}, {2, 2}}
	result := tictactoe(moves)
	fmt.Println(result) // Ожидаемый результат: "A"
}
