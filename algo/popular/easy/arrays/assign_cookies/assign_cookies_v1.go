package assign_cookies

import "sort"

func findContentChildrenV1(g []int, s []int) int {
	/*
		Time complexity : O(n log n)
		Space complexity : O(1)

		g - жадность ребенка. Выражается в минимальном размере печенья, которым будет доволен ребенок.
		j - каждое печенье.
		s[j] - размер печенья j.

		Задача в том, чтобы назначить элемент печенья s[i] конкретному ребенку g[i], которому ребенок i будет
		удовлетворен. Надо максимизировать количество удовлетворенных детей;
	*/
	sort.Ints(g) // n log(n). В g хранятся аппетиты детей(i).
	sort.Ints(s) // n log(n). В s хранятся размеры печенья(j).

	j := 0 // j - какое-то конкретное печенье. s[j] - размер печенья.

	for _, v := range s { // Цикл по аппетитам детей.
		if j >= len(g) { // Если в списке размеров печенья ничего нет, то нет смысла далее что-то делать.
			break
		}

		// Если текущее печенье не удовлетворяет запросам ребенка, то пробуем рассмотреть следующее печенье.
		// Это рабочий вариант, так как массивы отсортированы и значит запросы детей тоже, а так же размеры печений.
		if v >= g[j] {
			j++
		}
	}

	return j
}
