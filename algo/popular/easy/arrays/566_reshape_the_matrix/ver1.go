package main

// Функция reshapeMatrix принимает двумерный массив и две размерности r и c.
// Если размерность нового массива не соответствует количеству элементов в исходном,
// функция возвращает исходный массив. В противном случае она возвращает новый массив.
func reshapeMatrix(mat [][]int, r int, c int) [][]int {
	/*
		METHOD: Iterative

		TIME COMPLEXITY: O(r*c), где r и c - новые размеры массива.
		Это связано с тем, что мы проходим по каждому элементу нового массива и присваиваем ему значение из исходного массива.


		SPACE COMPLEXITY: O(r*c), так как мы создаем новый массив размера r x c.

	*/
	// Получаем количество строк и столбцов исходного массива
	rows := len(mat)
	cols := len(mat[0])

	// Если количество элементов в исходном и новом массиве не совпадает,
	// возвращаем исходный массив
	if rows*cols != r*c {
		return mat
	}

	// Создаем новый массив с размерностью r x c
	newMatrix := make([][]int, r)
	for i := range newMatrix {
		newMatrix[i] = make([]int, c)
	}

	// Заполняем новый массив элементами из исходного
	for i := 0; i < r*c; i++ {
		newMatrix[i/c][i%c] = mat[i/cols][i%cols]
	}

	return newMatrix
}
