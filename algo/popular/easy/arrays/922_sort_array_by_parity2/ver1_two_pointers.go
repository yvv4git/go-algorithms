package main

import "fmt"

func sortArrayByParityII(nums []int) []int {
	/*
		METHOD: Two pointers

		TIME COMPLEXITY: O(n), где n - количество элементов в массиве, так как мы проходим по всему массиву ровно один раз.

		SPACE COMPLEXITY: O(1), так как мы используем только несколько переменных, не зависящих от размера входного массива.
	*/
	// Инициализируем два указателя для четных и нечетных позиций
	i := 0 // для четных позиций
	j := 1 // для нечетных позиций

	// Проходим по всему массиву
	for i < len(nums) && j < len(nums) {
		// Если текущий элемент на четной позиции - нечетное число
		if nums[i]%2 == 1 {
			// Меняем его с элементом на нечетной позиции
			nums[i], nums[j] = nums[j], nums[i]
			// Переходим к следующей нечетной позиции
			j += 2
		} else {
			// Если текущий элемент на правильной позиции, переходим к следующему
			i += 2
		}
	}

	return nums
}

func main() {
	A := []int{4, 2, 5, 7}
	fmt.Println(sortArrayByParityII(A)) // Выводит: [4 5 2 7]
}
