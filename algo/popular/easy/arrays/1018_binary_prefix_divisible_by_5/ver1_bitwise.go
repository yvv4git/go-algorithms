package main

import "fmt"

// Функция для проверки, делится ли двоичное представление числа на 5
func prefixesDivBy5(nums []int) []bool {
	/*
		METHOD: Bitwise

		TIME COMPLEXITY: O(n), где n - количество бит в двоичном представлении числа,
		так как мы проходимся по каждому биту ровно один раз.

		SPACE COMPLEXITY: O(1), так как мы используем фиксированное количество переменных,
		не зависящих от размера входных данных.
	*/
	result := make([]bool, len(nums)) // Создаем слайс для результатов той же длины, что и входные данные
	num := 0                          // Переменная для хранения текущего числа

	for i, bit := range nums {
		num = (num<<1 | bit) % 5 // Сдвигаем текущее число на 1 бит влево и добавляем следующий бит с помощью логического ИЛИ
		// Затем вычисляем остаток от деления на 5
		result[i] = num == 0 // Если остаток равен 0, то текущее число делится на 5
	}

	return result // Возвращаем слайс с результатами
}

func main() {
	nums := []int{1, 0, 1}            // Пример двоичного представления числа 5
	fmt.Println(prefixesDivBy5(nums)) // Выводим результаты
}
