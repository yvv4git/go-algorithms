package main

func twoSumHash(nums []int, target int) []int {
	/*
		МЕТОД: Хеш-таблица.

		Время работы: O(n)
		Память: O(n)

		Функция twoSumHash принимает на вход массив целых чисел nums и целое число target.
		Цель функции - найти два числа в массиве, сумма которых равна target.
		Функция возвращает индексы этих чисел в массиве.

		Создаем пустую хеш-таблицу hash.
		Проходим по каждому числу nums и вычисляем число numToFind, которое должно быть в массиве, чтобы сумма с num давала target.
		Если numToFind уже есть в хеш-таблице, то мы нашли пару чисел, сумма которых равна target, и возвращаем индексы этих чисел.
		Если numToFind не найден в хеш-таблице, то добавляем num в хеш-таблицу с индексом idx.
		Если мы прошли весь массив и не нашли нужную пару чисел, то возвращаем пустой массив.
	*/
	hash := make(map[int]int)

	for idx, num := range nums {
		numToFind := target - num

		if idx2, ok := hash[numToFind]; ok {
			return []int{idx, idx2}
		}

		hash[num] = idx
	}

	return []int{}
}
