package main

func maxPower(s string) int {
	/*
		METHOD: Two Pointers
		В текущем решении используется более простой подход с одним указателем и счетчиком последовательностей.
		Мы просто итерируемся по строке и сравниваем текущий символ с предыдущим.

		TIME COMPLEXITY: O(n)
		SPACE COMPLEXITY: O(1)
	*/

	// Если строка пустая, возвращаем 0
	if len(s) == 0 {
		return 0
	}

	// Если строка состоит из одного символа, возвращаем 1
	if len(s) == 1 {
		return 1
	}

	// Текущий счетчик последовательности
	currentCount := 1
	// Максимальный счетчик последовательности
	maxCount := 1

	// Проходим по строке, начиная со второго символа
	for i := 1; i < len(s); i++ {
		// Если текущий символ равен предыдущему
		if s[i] == s[i-1] {
			// Увеличиваем текущий счетчик
			currentCount++
			// Обновляем максимальный счетчик, если текущий больше
			if currentCount > maxCount {
				maxCount = currentCount
			}
		} else {
			// Если символы разные, сбрасываем текущий счетчик
			currentCount = 1
		}
	}

	return maxCount
}
