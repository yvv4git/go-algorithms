//go:build ignore

package main

import "fmt"

// Функция flipAndInvertImage принимает двумерный массив (изображение) и возвращает его перевернутым и инвертированным.
func flipAndInvertImage(image [][]int) [][]int {
	/*
		METHOD: Iterative approach
		- Мы используем два вспомогательных метода: reverseRow и invertRow.
		- reverseRow переворачивает строку, меняя местами элементы с начала и конца строки.
		- invertRow инвертирует каждый элемент строки (0 становится 1, 1 становится 0).
		- Основной метод flipAndInvertImage проходит по каждой строке матрицы, вызывая эти два метода.

		TIME COMPLEXITY: O(n^2)
		- Временная сложность составляет O(n^2), где n — количество строк (или столбцов, так как матрица квадратная).
		- Для каждой строки (n строк) мы выполняем операции reverseRow и invertRow, каждая из которых работает за O(n).
		- Таким образом, общее время выполнения составляет O(n * n) = O(n^2).

		SPACE COMPLEXITY: O(1)
		- Пространственная сложность составляет O(1), так как мы не используем дополнительную память, кроме переменных для указателей и циклов.
		- Все операции выполняются на месте, без создания дополнительных массивов.
	*/
	// Проходим по каждой строке матрицы
	for i := 0; i < len(image); i++ {
		// Переворачиваем текущую строку
		reverseRow(image[i])
		// Инвертируем каждый элемент в перевернутой строке
		invertRow(image[i])
	}
	// Возвращаем измененное изображение
	return image
}

// Функция reverseRow переворачивает строку (массив целых чисел).
func reverseRow(row []int) {
	// Используем два указателя: один начинает с начала строки, другой с конца
	left, right := 0, len(row)-1
	// Пока указатели не встретятся
	for left < right {
		// Меняем местами элементы
		row[left], row[right] = row[right], row[left]
		// Двигаем указатели к центру
		left++
		right--
	}
}

// Функция invertRow инвертирует каждый элемент в строке (массиве целых чисел).
func invertRow(row []int) {
	// Проходим по каждому элементу строки
	for j := 0; j < len(row); j++ {
		// Инвертируем элемент (0 становится 1, 1 становится 0)
		row[j] = 1 - row[j]
	}
}

// Основная функция для тестирования
func main() {
	// Пример входного изображения
	image := [][]int{
		{1, 1, 0},
		{1, 0, 1},
		{0, 0, 0},
	}

	// Вызываем функцию flipAndInvertImage
	result := flipAndInvertImage(image)

	// Выводим результат
	fmt.Println(result)
}
