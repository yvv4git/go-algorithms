package main

import "fmt"

// Функция flipAndInvertImage принимает двумерный массив (изображение) и возвращает его перевернутым и инвертированным.
func flipAndInvertImage(image [][]int) [][]int {
	/*
		METHOD: Iterative approach
		- Мы используем два вспомогательных метода: reverseRow и invertRow.
		- reverseRow переворачивает строку, меняя местами элементы с начала и конца строки.
		- invertRow инвертирует каждый элемент строки (0 становится 1, 1 становится 0).
		- Основной метод flipAndInvertImage проходит по каждой строке матрицы, вызывая эти два метода.

		TIME COMPLEXITY: O(n^2)
		- Временная сложность составляет O(n^2), где n — количество строк (или столбцов, так как матрица квадратная).
		- Для каждой строки (n строк) мы выполняем операции reverseRow и invertRow, каждая из которых работает за O(n).
		- Таким образом, общее время выполнения составляет O(n * n) = O(n^2).

		SPACE COMPLEXITY: O(1)
	*/
	// Проходим по каждой строке матрицы
	for i := 0; i < len(image); i++ {
		// Используем два указателя: один начинает с начала строки, другой с конца
		left, right := 0, len(image[i])-1
		// Пока указатели не встретятся
		for left <= right {
			// Меняем местами элементы и инвертируем их
			image[i][left], image[i][right] = 1-image[i][right], 1-image[i][left]
			// Двигаем указатели к центру
			left++
			right--
		}
	}
	// Возвращаем измененное изображение
	return image
}

// Основная функция для тестирования
func main() {
	// Пример входного изображения
	image := [][]int{
		{1, 1, 0},
		{1, 0, 1},
		{0, 0, 0},
	}

	// Вызываем функцию flipAndInvertImage
	result := flipAndInvertImage(image)

	// Выводим результат
	fmt.Println(result)
}
