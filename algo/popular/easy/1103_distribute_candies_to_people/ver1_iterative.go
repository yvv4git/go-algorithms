package main

import (
	"fmt"
)

func distributeCandies(candies int, num_people int) []int {
	/*
		METHOD: Iterative
		Метод distributeCandies распределяет конфеты между num_people людьми.
		Каждый человек получает количество конфет, начиная с 1 и увеличиваясь на 1 на каждом шаге.
		Если конфет недостаточно для следующего человека, оставшиеся конфеты даются последнему человеку.
		Возвращается массив, где каждый элемент представляет количество конфет, полученных соответствующим человеком.

		TIME COMPLEXITY: O(sqrt(candies))
		Временная сложность составляет O(sqrt(candies)), так как количество итераций зависит от того,
		сколько раз мы можем увеличивать количество конфет, пока не закончатся конфеты.

		SPACE COMPLEXITY: O(num_people)
		Пространственная сложность равна O(num_people), так как мы используем массив для хранения результатов.
	*/
	result := make([]int, num_people) // Создаем массив для хранения количества конфет у каждого человека.
	candiesToGive := 1                // Начинаем с 1 конфеты, которые нужно раздать первому человеку.

	// Пока есть конфеты, продолжаем распределение.
	for candies > 0 {
		// Проходим по каждому человеку в ряду.
		for i := 0; i < num_people; i++ {
			// Если конфет меньше, чем нужно раздать на текущем шаге,
			// то даем оставшиеся конфеты и завершаем распределение.
			if candies <= candiesToGive {
				result[i] += candies // Добавляем оставшиеся конфеты текущему человеку.
				return result        // Возвращаем результат, так как конфеты закончились.
			}

			// Иначе даем текущему человеку candiesToGive конфет.
			result[i] += candiesToGive // Добавляем конфеты текущему человеку.
			candies -= candiesToGive   // Уменьшаем общее количество конфет.
			candiesToGive++            // Увеличиваем количество конфет, которые нужно раздать на следующем шаге.
		}
	}

	// Если конфеты закончились, возвращаем результат.
	return result
}

func main() {
	// Пример использования метода distributeCandies.
	candies := 7
	num_people := 4

	// Вызываем метод и сохраняем результат.
	distribution := distributeCandies(candies, num_people)

	// Выводим результат.
	fmt.Printf("Распределение конфет между %d людьми: %v\n", num_people, distribution)
}
