package main

import "fmt"

// Функция isRectangleOverlap проверяет, пересекаются ли два прямоугольника.
func isRectangleOverlap(rec1 []int, rec2 []int) bool {
	/*
		METHOD: Math
		TIME COMPLEXITY: O(1)
		SPACE COMPLEXITY: O(1)
	*/
	// Проверяем условия, при которых прямоугольники точно не пересекаются:
	// 1. Если правый край первого прямоугольника левее левого края второго.
	// 2. Если левый край первого прямоугольника правее правого края второго.
	// 3. Если верхний край первого прямоугольника ниже нижнего края второго.
	// 4. Если нижний край первого прямоугольника выше верхнего края второго.
	if rec1[2] <= rec2[0] || // rec1[2] - правый край rec1, rec2[0] - левый край rec2
		rec1[0] >= rec2[2] || // rec1[0] - левый край rec1, rec2[2] - правый край rec2
		rec1[3] <= rec2[1] || // rec1[3] - верхний край rec1, rec2[1] - нижний край rec2
		rec1[1] >= rec2[3] { // rec1[1] - нижний край rec1, rec2[3] - верхний край rec2
		return false
	}

	// Если ни одно из условий не выполнилось, прямоугольники пересекаются.
	return true
}

func main() {
	// Пример 1: Прямоугольники пересекаются
	rec1 := []int{0, 0, 2, 2}
	rec2 := []int{1, 1, 3, 3}
	fmt.Println("Пример 1: Пересекаются ли rec1 и rec2?", isRectangleOverlap(rec1, rec2)) // Вывод: true

	// Пример 2: Прямоугольники не пересекаются
	rec3 := []int{0, 0, 1, 1}
	rec4 := []int{1, 1, 2, 2}
	fmt.Println("Пример 2: Пересекаются ли rec3 и rec4?", isRectangleOverlap(rec3, rec4)) // Вывод: false

	// Пример 3: Прямоугольники касаются друг друга, но не пересекаются
	rec5 := []int{0, 0, 1, 1}
	rec6 := []int{1, 0, 2, 1}
	fmt.Println("Пример 3: Пересекаются ли rec5 и rec6?", isRectangleOverlap(rec5, rec6)) // Вывод: false

	// Пример 4: Прямоугольники пересекаются
	rec7 := []int{0, 0, 3, 3}
	rec8 := []int{1, 1, 4, 4}
	fmt.Println("Пример 4: Пересекаются ли rec7 и rec8?", isRectangleOverlap(rec7, rec8)) // Вывод: true
}
