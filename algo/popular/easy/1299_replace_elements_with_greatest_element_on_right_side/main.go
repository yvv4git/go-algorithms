package main

import "fmt"

func replaceElements(arr []int) []int {
	/*
		APPROACH: Iterative (с конца массива)

		1. Идем по массиву с конца в начало.
		2. На каждом шаге запоминаем наибольший элемент справа от текущего.
		3. Заменяем текущий элемент на этот наибольший элемент.
		4. Последний элемент заменяем на -1, так как справа от него ничего нет.

		TIME COMPLEXITY: O(n)
		- Мы проходим по массиву один раз, выполняя константные операции на каждом шаге.

		SPACE COMPLEXITY: O(1)
		- Мы используем только константное количество дополнительной памяти (переменная maxRight).
		- Массив изменяется на месте, без использования дополнительных структур данных.
	*/

	maxRight := -1 // Инициализируем переменную для хранения наибольшего элемента справа

	// Идем по массиву с конца в начало
	for i := len(arr) - 1; i >= 0; i-- {
		current := arr[i] // Сохраняем текущий элемент
		arr[i] = maxRight // Заменяем текущий элемент на наибольший элемент справа

		// Обновляем наибольший элемент справа, если текущий элемент больше
		if current > maxRight {
			maxRight = current
		}
	}

	return arr // Возвращаем измененный массив
}

func main() {
	// Пример входного массива
	arr := []int{17, 18, 5, 4, 6, 1}

	// Вызываем функцию replaceElements
	result := replaceElements(arr)

	// Выводим результат
	fmt.Println(result) // Ожидаемый вывод: [18, 6, 6, 6, 1, -1]
}
