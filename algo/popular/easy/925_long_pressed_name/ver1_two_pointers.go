package main

func isLongPressedName(name string, typed string) bool {
	/*
		METHOD: Two Pointers
		TIME COMPLEXITY: O(n), где n - длина строки name
		SPACE COMPLEXITY: O(1)

		Объяснение метода:
		Мы используем два указателя для прохода по строкам name и typed.
		Указатель i проходит по строке name, а указатель j проходит по строке typed.
		Если символы в name и typed совпадают, оба указателя увеличиваются.
		Если символы не совпадают, но текущий символ в typed повторяет предыдущий,
		увеличивается только указатель j (пропускаем лишние повторения).
		Если символы не совпадают и не являются повторением, возвращаем false.
		После завершения цикла проверяем, прошли ли мы всю строку name.

		Временная сложность:
		Мы проходим по строкам name и typed всего один раз, поэтому временная сложность составляет O(n),
		где n - длина строки name.

		Пространственная сложность:
		Мы используем только две дополнительные переменные (указатели i и j),
		поэтому пространственная сложность составляет O(1).
	*/

	// Инициализируем два указателя: i для name и j для typed
	i, j := 0, 0

	// Проходим по строкам, пока не достигнем конца одной из них
	for j < len(typed) {
		// Если символы совпадают, переходим к следующим символам в обеих строках
		if i < len(name) && name[i] == typed[j] {
			i++
			j++
		} else if j > 0 && typed[j] == typed[j-1] {
			// Если символ в typed повторяется, пропускаем лишние повторения
			j++
		} else {
			// Если символы не совпадают и не являются повторением, возвращаем false
			return false
		}
	}

	// Проверяем, прошли ли мы всю строку name
	return i == len(name)
}
