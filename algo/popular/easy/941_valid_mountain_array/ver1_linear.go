package main

func validMountainArray(arr []int) bool {
	/*
		METHOD: Линейный поиск (Linear Search)
		Этот метод использует два прохода по массиву для определения, является ли он горным.
		Сначала мы ищем пик, двигаясь по возрастающей части массива, а затем проверяем,
		что после пика массив убывает.

		TIME COMPLEXITY: O(n)
		Временная сложность алгоритма составляет O(n), где n — длина массива.
		Мы проходим по массиву дважды: один раз для поиска пика и один раз для проверки убывающей части.
		Таким образом, общее количество операций пропорционально длине массива.

		SPACE COMPLEXITY: O(1)
		Пространственная сложность алгоритма составляет O(1), так как мы используем только
		несколько дополнительных переменных (i, n), которые не зависят от размера входного массива.
	*/
	n := len(arr)

	// Проверяем, что длина массива не менее 3
	if n < 3 {
		return false
	}

	i := 0

	// Идем вверх по возрастающей части массива
	for i+1 < n && arr[i] < arr[i+1] {
		i++
	}

	// Если пик находится на первом или последнем элементе, то это не горный массив
	if i == 0 || i == n-1 {
		return false
	}

	// Идем вниз по убывающей части массива
	for i+1 < n && arr[i] > arr[i+1] {
		i++
	}

	// Если мы дошли до конца массива, то это горный массив
	return i == n-1
}
