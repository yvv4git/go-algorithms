package main

func numIdenticalPairs(nums []int) int {
	/*
		METHOD: Brute Force
		- Инициализируем переменную `count` со значением 0.
		- Используем два вложенных цикла `for`, чтобы пройти по всем парам элементов в массиве.
		- Внутренний цикл начинается с индекса `j`, равного `i + 1`, чтобы избежать повторного подсчета пар.
		- Если элементы `nums[i]` и `nums[j]` равны, увеличиваем значение `count` на 1.
		- После завершения обоих циклов возвращаем значение `count`.

		TIME COMPLEXITY: O(n^2)
		- Временная сложность алгоритма составляет O(n^2), где n - длина массива `nums`.
		- Пространственная сложность алгоритма составляет O(1), так как используется только константное количество переменных.

		SPACE COMPLEXITY: O(1)
		- Временная сложность алгоритма линейна относительно длины массива `nums`.
		- Пространственная сложность алгоритма постоянная, так как используется только константное количество переменных.
	*/
	count := 0

	for i := 0; i < len(nums); i++ {
		for j := i + 1; j < len(nums); j++ {
			if nums[i] == nums[j] {
				count++
			}
		}
	}

	return count
}
