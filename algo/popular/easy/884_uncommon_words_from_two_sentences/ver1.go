package main

import (
	"fmt"
	"strings"
)

func uncommonFromSentences(s1 string, s2 string) []string {
	/*
		METHOD: Hashmap
		Этот метод решает задачу по поиску слов, которые встречаются только один раз в двух предложениях.
		Алгоритм состоит из следующих шагов:
		1. Объединение двух предложений в одну строку.
		2. Разбиение объединенной строки на отдельные слова.
		3. Подсчет частоты каждого слова с использованием карты (hashmap).
		4. Фильтрация слов, которые встречаются ровно один раз.
		5. Возврат списка этих слов.

		TIME COMPLEXITY:
		Временная сложность алгоритма составляет O(n), где n — общее количество слов в двух предложениях.
		- Объединение строк и разбиение на слова занимает O(n).
		- Подсчет частоты слов в карте также занимает O(n).
		- Фильтрация слов, встречающихся один раз, занимает O(n).
		Таким образом, общая временная сложность составляет O(n).

		SPACE COMPLEXITY:
		Пространственная сложность алгоритма составляет O(n), где n — общее количество слов в двух предложениях.
		- Карта для подсчета частоты слов занимает O(n) пространства.
		- Слайс для хранения необычных слов также может занимать до O(n) пространства в худшем случае, если все слова уникальны.
		Таким образом, общая пространственная сложность составляет O(n).
	*/
	// Объединяем два предложения в одну строку, разделяя слова пробелами
	combined := s1 + " " + s2

	// Разбиваем объединенную строку на слова
	words := strings.Fields(combined)

	// Создаем карту для подсчета частоты каждого слова
	wordCount := make(map[string]int)

	// Подсчитываем частоту каждого слова
	for _, word := range words {
		wordCount[word]++
	}

	// Создаем слайс для хранения необычных слов
	var uncommonWords []string

	// Проходим по карте и добавляем слова, которые встречаются ровно один раз
	for word, count := range wordCount {
		if count == 1 {
			uncommonWords = append(uncommonWords, word)
		}
	}

	// Возвращаем слайс с необычными словами
	return uncommonWords
}

func main() {
	// Пример использования функции
	s1 := "this apple is sweet"
	s2 := "this apple is sour"
	result := uncommonFromSentences(s1, s2)
	fmt.Println(result) // Вывод: [sweet sour]
}
