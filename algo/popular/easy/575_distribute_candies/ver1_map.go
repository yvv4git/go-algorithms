package main

func distributeCandies(candyType []int) int {
	/*
	   METHOD: HashTable (Хеш-таблица) - метод, который позволяет эффективно хранить и искать уникальные элементы в коллекции.
	   TIME COMPLEXITY: O(n) - линейная сложность, где n - количество элементов в массиве candyType.
	   SPACE COMPLEXITY: O(n) - линейная сложность, где n - количество уникальных элементов в массиве candyType.
	*/
	// Количество разновидностей конфет равно количеству уникальных элементов в массиве
	// Используем карту для хранения уникальных элементов
	uniqueCandies := make(map[int]bool)

	// Итерируемся по массиву и добавляем уникальные элементы в карту
	for _, candy := range candyType {
		uniqueCandies[candy] = true
	}

	// Количество разновидностей конфет равно количеству ключей в карте
	numUniqueCandies := len(uniqueCandies)

	// Если количество разновидностей конфет больше или равно половине общего количества конфет,
	// то можно распределить конфеты так, чтобы каждая разновидность конфет была представлена
	if numUniqueCandies >= len(candyType)/2 {
		return len(candyType) / 2
	} else {
		// Иначе можно распределить конфеты так, чтобы каждая разновидность конфет была представлена,
		// и остальные конфеты можно распределить между людьми
		return numUniqueCandies
	}
}
