package main

import (
	"fmt"
	"sort"
)

// Функция для сортировки массива с использованием алгоритма Bucket Sort
func bucketSort(arr []float64) []float64 {
	/*
		TIME COMPLEXITY: O(n^2)
		В худшем случае, если элементы не равномерно распределены по диапазону, и каждый элемент попадает в одно ведро,
		то сложность сортировки внутри каждого ведра будет O(n^2) (с использованием сортировки вставками).
		Однако в среднем, если данные равномерно распределены, временная сложность составляет O(n + k log k),
		где n — это количество элементов в массиве, а k — количество ведер.

		SPACE COMPLEXITY: O(n + k)
		Алгоритм использует дополнительные структуры данных для ведра,
		так что пространственная сложность будет O(n + k), где n — количество элементов в массиве, а k — количество ведёр.
	*/
	// Если массив пустой или содержит только один элемент, возвращаем его
	if len(arr) <= 1 {
		return arr
	}

	// Находим минимальное и максимальное значение в массиве
	min, max := arr[0], arr[0]
	for _, num := range arr {
		if num < min {
			min = num
		}
		if num > max {
			max = num
		}
	}

	// Количество ведер (для простоты будем использовать длину массива как количество ведер)
	bucketCount := len(arr)

	// Создаем ведра
	buckets := make([][]float64, bucketCount)

	// Разделяем элементы массива на ведра
	for _, num := range arr {
		// Вычисляем индекс ведра для каждого элемента
		index := int((num - min) / (max - min) * float64(bucketCount-1))
		buckets[index] = append(buckets[index], num)
	}

	// Сортируем элементы внутри каждого ведра
	for i := 0; i < bucketCount; i++ {
		sort.Float64s(buckets[i]) // Сортируем каждое ведро с помощью стандартной сортировки
	}

	// Объединяем отсортированные элементы из всех ведер в один массив
	var sortedArr []float64
	for _, bucket := range buckets {
		sortedArr = append(sortedArr, bucket...)
	}

	return sortedArr
}

func main() {
	// Пример массива
	arr := []float64{0.42, 0.32, 0.55, 0.23, 0.74, 0.62, 0.11}

	// Выводим отсортированный массив
	sortedArr := bucketSort(arr)
	fmt.Println("Отсортированный массив:", sortedArr)
}
