//go:build ignore

package main

import (
	"fmt"
	"sort"
)

// Функция для поиска пары чисел с заданной суммой
func findPairWithSum(arr []int, target int) (int, int) {
	/*
		METHOD: Two Pointers Approach
		1. Сортируем массив для того, чтобы использовать два указателя.
		2. Один указатель устанавливаем в начале массива, а второй — в конце.
		3. Если сумма элементов на указателях равна заданной, возвращаем пару.
		4. Если сумма меньше заданной, сдвигаем левый указатель вправо.
		5. Если сумма больше заданной, сдвигаем правый указатель влево.

		TIME COMPLEXITY: O(nlogn) из-за сортировки массива
		SPACE COMPLEXITY: O(1) — дополнительные данные не используются.
	*/

	// Сортируем массив
	sort.Ints(arr)

	// Устанавливаем два указателя: один на начало, другой на конец массива
	left, right := 0, len(arr)-1

	// Проходим по массиву, пока указатели не встретятся
	for left < right {
		sum := arr[left] + arr[right]
		if sum == target {
			// Возвращаем пару, если нашли нужную сумму
			return arr[left], arr[right]
		} else if sum < target {
			// Если сумма меньше, сдвигаем левый указатель вправо
			left++
		} else {
			// Если сумма больше, сдвигаем правый указатель влево
			right--
		}
	}

	// Если пара не найдена, возвращаем -1, -1
	return -1, -1
}

/*
	Задача: Найти пару чисел в отсортированном массиве, которые в сумме дают заданное число.

	Условия задачи:
	Дан отсортированный массив целых чисел и целевое число. Требуется найти пару чисел из массива, которые в сумме равны целевому числу.

	Пример:
	Вход:
		arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]
		target = 10

	Выход:
		(1, 9)

	Алгоритм использует метод двух указателей для нахождения пары чисел, сумма которых равна целевому числу.

	ТАЙМ-КОМПЛЕКСНОСТЬ: O(nlogn) из-за сортировки массива
	СПЕЙС-КОМПЛЕКСНОСТЬ: O(1) — дополнительные массивы не используются
*/

func main() {
	// Задаем отсортированный массив
	arr := []int{1, 2, 3, 4, 5, 6, 7, 8, 9}

	// Задаем целевую сумму
	target := 10

	// Вызываем функцию для поиска пары
	num1, num2 := findPairWithSum(arr, target)

	// Выводим результат
	if num1 != -1 {
		fmt.Printf("Найдена пара: %d и %d\n", num1, num2)
	} else {
		fmt.Println("Пара не найдена")
	}
}
