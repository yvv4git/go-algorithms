package fibonacci

func fibonacciDP(n uint) uint {
	/*
		METHOD: Dynamic Programming
		TIME COMPLEXITY: O(n), где n - это входной параметр функции. Это связано с тем, что функция выполняет одно итеративное вычисление для каждого числа от 2 до n.
		Space complexity: O(n), так как используется фиксированное количество переменных, независимо от размера входного параметра n.
		Это означает, что алгоритм требует постоянного объема памяти, независимо от размера входных данных.
	*/
	// Если n меньше 2, то результат равен n.
	if n < 2 {
		return n
	}

	// Инициализация переменных a, b и c для вычисления чисел Фибоначчи.
	// a и b соответствуют первым двум числам Фибоначчи (0 и 1).
	// c будет использоваться для хранения текущего числа Фибоначчи.
	var a, b, c uint = 0, 1, 0

	// Цикл for вычисляет числа Фибоначчи от 2 до n.
	for i := uint(2); i <= n; i++ {
		// Вычисление текущего числа Фибоначчи как суммы двух предыдущих.
		c = a + b
		// Сдвиг значений a и b на один шаг вперед.
		a = b
		b = c
	}

	return c
}
