package main

/*
Two Pointer или Sliding Window - это подход, который используется для решения задач, где требуется найти подмассив или подстроку,
который удовлетворяет определенным условиям. Он основан на идее использования двух указателей,
которые двигаются вдоль массива или строки одновременно.

В этом примере мы используем подход Sliding Window для нахождения максимальной суммы подмассива размера k в заданном массиве.
Мы начинаем с суммы первых k элементов, а затем двигаем окно вправо, добавляя следующий элемент и вычитая первый элемент из окна.
Мы обновляем максимальную сумму, если текущая сумма окна больше максимальной суммы.
*/

func maxSum(arr []int, k int) int {
	if len(arr) < k {
		return -1
	}

	windowSum := 0
	for i := 0; i < k; i++ {
		windowSum += arr[i]
	}

	maxSum := windowSum
	for end := k; end < len(arr); end++ {
		windowSum += arr[end] - arr[end-k]
		maxSum = max(maxSum, windowSum)
	}

	return maxSum
}

func max(a, b int) int {
	if a > b {
		return a
	}
	return b
}
