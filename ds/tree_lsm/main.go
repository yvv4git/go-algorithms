package main

import "fmt"

func main() {
	/*
		LSM дерево (Log-Structured Merge Tree) - это тип базы данных,
		который использует метод слияния и уровней для эффективного хранения больших объемов данных.

		Основная идея LSM дерева заключается в том, что данные сначала записываются в память (memtable) и только потом,
		когда memtable становится слишком большим, он сливается (merge) в неизменяемый файл на диске (SSTable).
		Этот процесс повторяется для каждой новой записи, создавая набор небольших, отсортированных файлов на диске.

		Когда нужно прочитать данные, он сначала проверяет memtable, а затем SSTables, начиная с самого последнего.
		Это позволяет быстро найти данные, так как SSTables отсортированы, и поэтому можно использовать эффективные алгоритмы поиска, такие как двоичный поиск.

		LSM деревья очень эффективны для работы с большими объемами данных, т
		ак как они могут обрабатывать многие операции записи и чтения, не блокируя другие операции.

		Где используются:
		- LSM деревья широко используются в базах данных NoSQL, таких как Apache Cassandra, Google Bigtable и Amazon DynamoDB.
	*/
	lsm := NewLSM()
	lsm.Put("key1", "value1")
	lsm.Put("key2", "value2")
	lsm.Put("key3", "value3")

	value, ok := lsm.Get("key1")
	if ok {
		fmt.Println(value)
	} else {
		fmt.Println("Key not found")
	}

	lsm.Merge()
}
